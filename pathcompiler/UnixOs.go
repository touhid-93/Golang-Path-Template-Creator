package pathcompiler

var UnixOs = Specific{
	Name:                     "Unix",
	Description:              "all unix(ubuntu, debian, linux, darwin ...) related os paths",
	SpecificPathFileLocation: unixVarAppRoot + DefaultSuffix.SpecificPathFileLocation,
	VarAppRoot:               unixVarAppRoot,
	EtcAppRoot:               etcApp,
	EtcAppConfigRoot:         unixConfigRoot,
	AppDbRoot:                unixVarAppRoot + DefaultSuffix.AppDbRoot,
	TempRoot:                 TempAppRoot,
	UserTempRoot:             TempAppRoot + DefaultSuffix.UserTempRoot,
	CacheTempRoot:            TempAppRoot + DefaultSuffix.CacheTempRoot,
	InstructionTempRoot:      TempAppRoot + DefaultSuffix.InstructionTempRoot,
	MigrationCacheRoot:       TempAppRoot + DefaultSuffix.MigrationCacheRoot,
	PackageTempRoot:          TempAppRoot + DefaultSuffix.PackageTempRoot,
	LogAppRoot:               unixLogAppRoot,
	VarCacheRoot:             unixVarAppRoot + DefaultSuffix.VarCacheRoot,
	DownloadsRoot:            unixVarAppRoot + DefaultSuffix.DownloadsRoot,
	ScriptsRoot:              unixVarAppRoot + DefaultSuffix.ScriptsRoot,
	DecompressRoot:           TempAppRoot + DefaultSuffix.DecompressRoot,
	PackagesRoot:             etcApp + DefaultSuffix.PackagesRoot,
	PackagesDownloadRoot:     unixVarAppRoot + DefaultSuffix.PackagesDownloadRoot,
	DefaultInstructionsRoot:  unixVarAppRoot + DefaultSuffix.DefaultInstructionsRoot,
	DefaultEnvRoot:           unixVarAppRoot + DefaultSuffix.DefaultEnvRoot,
	DefaultEnvPathRoot:       unixVarAppRoot + DefaultSuffix.DefaultEnvPathRoot,
	BackupRoot:               unixVarAppRoot + DefaultSuffix.BackupRoot,
	ArchiveRoot:              unixVarAppRoot + DefaultSuffix.ArchiveRoot,
	ZipsRoot:                 unixVarAppRoot + DefaultSuffix.ZipsRoot,
	DefaultConfigFilePath:    etcApp + DefaultSuffix.DefaultConfigFilePath,
	SnapshotsRoot:            unixVarAppRoot + DefaultSuffix.SnapshotsRoot,
	PublicRoot:               "/var/" + DefaultSuffix.PublicRoot,
	SslRoot:                  unixVarAppRoot + DefaultSuffix.SslRoot,
}
